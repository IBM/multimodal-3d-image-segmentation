[main]
output_dir = '~/BraTS2019/Experiments/train-0.9_valid-0.1/outputs_120x120x78/vnet-ds'
is_train = True
is_test = True
is_statistics = True
visible_devices = '1'  # Which GPU is used

[input_lists]
data_dir = '~/BraTS2019/Data/120x120x78'  # Where the images are stored
list_dir = '~/BraTS2019/Experiments/train-0.9_valid-0.1/inputs'
data_lists_train_paths = [
	${list_dir}'/t1_train-0.9.txt',
	${list_dir}'/t1ce_train-0.9.txt',
	${list_dir}'/t2_train-0.9.txt',
	${list_dir}'/flair_train-0.9.txt',
	${list_dir}'/seg_train-0.9.txt',
	]
data_lists_valid_paths = [
	${list_dir}'/t1_valid-0.1.txt',
	${list_dir}'/t1ce_valid-0.1.txt',
	${list_dir}'/t2_valid-0.1.txt',
	${list_dir}'/flair_valid-0.1.txt',
	${list_dir}'/seg_valid-0.1.txt',
	]
data_lists_test_paths = [
	${list_dir}'/t1_valid-0.1.txt',
	${list_dir}'/t1ce_valid-0.1.txt',
	${list_dir}'/t2_valid-0.1.txt',
	${list_dir}'/flair_valid-0.1.txt',
	${list_dir}'/seg_valid-0.1.txt',
	]

[input_args]
idx_x_modalities = [0, 1, 2, 3]  # Indexes to x modalities in the data lists
idx_y_modalities = [4]  # Indexes to y modalities in the data lists
batch_size = 1
max_queue_size = 5
workers = 5  # Must be >= 1 to use threading
use_data_normalization = True

[augmentation]
rotation_range = [30, 0, 0]  # Along the depth, height, width axis
shift_range = [0.2, 0.2, 0.2]
zoom_range = [0.8, 1.2]
augmentation_probability = 0.8
ndim = 5  # 5 for 3D, 4 for 2D

[optimizer]
optimizer_name = 'Adamax'

[scheduler]
scheduler_name = 'CosineDecayRestarts'
decay_epochs = 100  # Used to compute `decay_steps` of the scheduler
initial_learning_rate = 1e-2
t_mul = 1.0
m_mul = 1.0
alpha = 1e-1

[model]
builder_name = 'VNetDS'
base_num_filters = 12
num_blocks = [1, 2, 3, 3, 3]
num_output_channels = 4
use_resize = True
right_leg_indexes = [0, 1, 2, 3, 4]
loss = 'PCCLoss'

[train]
label_mapping = {4: 3}  # Maps ground-truth label 4 to predicted label 3 (BraTS specific)
num_epochs = 100
selection_epoch_portion = 0.5
is_save_model = True
is_plot_model = True  # If you cannot install graphviz, change it to False
is_print = True

[test]
label_mapping = {3: 4}  # Maps predicted label 3 to ground-truth label 4 (BraTS specific)
output_folder = 'test'  # A subfolder under `output_dir`
